{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/ian/client/src/web/components/managerComponents/ManagerMain.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ManagerMain() {\n  _s();\n\n  const [url, setUrl] = useState('https://accounts.google.com/o/oauth2/v2/auth?client_id=780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com&response_type=token&redirect_uri=https://localhost:3000&scope=https://www.googleapis.com/auth/userinfo.email');\n  const [data, setData] = useState(null);\n  useEffect(async () => {\n    const url = new URL(window.location.href); //? hash를 떼어주고\n\n    const hash = url.hash;\n    console.log('url', url);\n\n    if (hash) {\n      //? 토큰만 떼어주면된다.\n      const accessToken = hash.split(\"=\")[1].split(\"&\")[0]; //? 토큰을 이용한 api 요청.\n\n      await axios.get('https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + accessToken, {\n        headers: {\n          authorization: `token ${accessToken}`,\n          accept: 'application/json'\n        }\n      }).then(data => {\n        setData(data);\n      }).catch(e => console.log('oAuth token expired'));\n    }\n  }, []);\n\n  function socialLoginHandler() {\n    window.location.assign(url);\n  }\n\n  function test(res) {\n    console.log('res : ', res.accessToken);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uAD00\\uB9AC\\uC790\\uBA54\\uC778\\uD398\\uC774\\uC9C0 \\uC5EC\\uAE30\\uB2E4\\uAC00 \\uCC98\\uC74C \\uD398\\uC774\\uC9C0\\uB97C Oath \\uB85C\\uADF8\\uC778\\uC744 \\uD558\\uB3C4\\uB85D \\uD558\\uC790. \\uADF8\\uB9AC\\uACE0 \\uD1A0\\uD070\\uC744 \\uC8FC\\uACE0 \\uADF8 \\uD1A0\\uD070\\uC73C\\uB85C \\uAD00\\uB9AC\\uC790 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C Authorization\\uC744 \\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uD558\\uC790.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [\"OAuth 2.0\\uC73C\\uB85C \\uC18C\\uC15C \\uB85C\\uADF8\\uC778\\uC744 \\uAD6C\\uD604\\uD574\\uBCF4\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"logo\",\n        alt: \"logo\",\n        src: \"https://lh3.googleusercontent.com/a/default-user=s96-c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: '780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com',\n        buttonText: \"Google\\uB85C \\uB85C\\uADF8\\uC778\",\n        onSuccess: test,\n        onFailure: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ManagerMain, \"bufAhishlCoObuGiqOUSn1c4Pm4=\");\n\n_c = ManagerMain;\nexport default ManagerMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerMain\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/managerComponents/ManagerMain.jsx"],"names":["React","useState","useEffect","axios","GoogleLogin","ManagerMain","url","setUrl","data","setData","URL","window","location","href","hash","console","log","accessToken","split","get","headers","authorization","accept","then","catch","e","socialLoginHandler","assign","test","res"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,8OAAD,CAA9B;AACA,QAAM,CAAEO,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMI,GAAG,GAAG,IAAII,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAZ,CADkB,CAElB;;AACA,UAAMC,IAAI,GAAGR,GAAG,CAACQ,IAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBV,GAAlB;;AACA,QAAIQ,IAAJ,EAAU;AACN;AACA,YAAMG,WAAW,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBA,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAApB,CAFM,CAGN;;AACA,YAAMf,KAAK,CAACgB,GAAN,CAAU,gEAAgEF,WAA1E,EAAuF;AACzFG,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAG,SAAQJ,WAAY,EAD/B;AAELK,UAAAA,MAAM,EAAE;AAFH;AADgF,OAAvF,EAMDC,IANC,CAMIf,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OARC,EAQCgB,KARD,CAQOC,CAAC,IAAIV,OAAO,CAACC,GAAR,CAAY,qBAAZ,CARZ,CAAN;AASH;AACJ,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,WAASU,kBAAT,GAA8B;AAC1Bf,IAAAA,MAAM,CAACC,QAAP,CAAgBe,MAAhB,CAAuBrB,GAAvB;AACH;;AACD,WAASsB,IAAT,CAAcC,GAAd,EAAkB;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBa,GAAG,CAACZ,WAA1B;AAEH;;AAED,sBACI;AAAA,sZAKI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,mIAEA;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,GAAG,EAAC,MAAnB;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,WAAD;AACI,QAAA,QAAQ,EAAE,0EADd;AAEI,QAAA,UAAU,EAAC,iCAFf;AAGI,QAAA,SAAS,EAAEW,IAHf;AAII,QAAA,SAAS,EAAEA;AAJf;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAlDQvB,W;;KAAAA,W;AAoDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\n\nfunction ManagerMain() {\n    const [url, setUrl] = useState('https://accounts.google.com/o/oauth2/v2/auth?client_id=780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com&response_type=token&redirect_uri=https://localhost:3000&scope=https://www.googleapis.com/auth/userinfo.email');\n    const [ data, setData ] = useState(null);\n    useEffect(async () => {\n        const url = new URL(window.location.href);\n        //? hash를 떼어주고\n        const hash = url.hash;\n        console.log('url',url);\n        if (hash) {\n            //? 토큰만 떼어주면된다.\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0];\n            //? 토큰을 이용한 api 요청.\n            await axios.get('https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + accessToken, {\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: 'application/json'\n                }\n            })\n                .then(data => {\n                    setData(data);\n                }).catch(e => console.log('oAuth token expired'));\n        }\n    }, [])\n\n    function socialLoginHandler() {\n        window.location.assign(url);\n    }\n    function test(res){\n        console.log('res : ', res.accessToken);\n\n    }\n\n    return (\n        <div>\n            관리자메인페이지\n            여기다가 처음 페이지를 Oath 로그인을 하도록 하자. 그리고 토큰을 주고 그 토큰으로\n            관리자 페이지에서 Authorization을 할 수 있도록 하자.\n\n            <div className='loginContainer'>\n                OAuth 2.0으로 소셜 로그인을 구현해보세요.\n            <img id=\"logo\" alt=\"logo\" src=\"https://lh3.googleusercontent.com/a/default-user=s96-c\" />\n            <GoogleLogin\n                clientId={'780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com'}\n                buttonText=\"Google로 로그인\"\n                onSuccess={test}\n                onFailure={test}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ManagerMain\n"]},"metadata":{},"sourceType":"module"}