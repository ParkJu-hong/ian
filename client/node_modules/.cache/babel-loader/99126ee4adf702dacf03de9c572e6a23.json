{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import GoogleLogin from'react-google-login';import{useSelector,useDispatch}from'react-redux';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function ManagerMain(){// 리덕스로 로그인되면 다른 컴포넌트로 렌더링하자\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),temp=_useState2[0],setTemp=_useState2[1];var dispatch=useDispatch();var ismanagerLogin=useSelector(function(state){return state.reducerMenu.ismanagerLogin;});var accessToken=useSelector(function(state){return state.reducerMenu.accessToken;});useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);})),[]);function test(_x){return _test.apply(this,arguments);}function _test(){_test=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('https://www.googleapis.com/oauth2/v2/userinfo?access_token='+res.accessToken,{headers:{authorization:\"token \".concat(res.accessToken),accept:'application/json'}}).then(function(data){var isHeManager=data.data.email===\"bejejupark@gmail.com\";if(isHeManager){dispatch({type:'LOGIN_MANAGER'});ajaxForJsonWebToken(res.accessToken);}else{console.log('실패함');}}).catch(function(e){return console.log('oAuth token expired');});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _test.apply(this,arguments);}function ajaxForJsonWebToken(_x2){return _ajaxForJsonWebToken.apply(this,arguments);}function _ajaxForJsonWebToken(){_ajaxForJsonWebToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(temp){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.post('http://localhost:3001/login',{token:temp}).then(function(data){console.log('data : ',data);console.log('data.data.accessToken : ',data.data.accessToken);setTemp(data.data.accessToken);dispatch({type:'ACCESS_TOKEN',payload:{accessToken:data.data.accessToken}});ajaxForIsAuthorization();}).catch(function(error){console.log('error : ',error);});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _ajaxForJsonWebToken.apply(this,arguments);}function ajaxForIsAuthorization(){return _ajaxForIsAuthorization.apply(this,arguments);}function _ajaxForIsAuthorization(){_ajaxForIsAuthorization=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.get('http://localhost:3001/isAuthorization',{headers:{Authorization:\"Bearer \".concat(accessToken),\"Content-Type\":\"application/json\"},withCredentials:true}).then(function(data){console.log('data : ',data);console.log('{ message: This is Authorization OK }');}).catch(function(error){console.log('ajaxForIsAuthorization error : ',error);});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return _ajaxForIsAuthorization.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{children:ismanagerLogin?/*#__PURE__*/_jsx(_Fragment,{children:\"\\uB85C\\uADF8\\uC778\\uB40C\"}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(GoogleLogin,{clientId:'780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com',buttonText:\"Google\\uB85C \\uB85C\\uADF8\\uC778\",onSuccess:test,onFailure:test})})});}export default ManagerMain;","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/managerComponents/ManagerMain.jsx"],"names":["React","useState","useEffect","axios","GoogleLogin","useSelector","useDispatch","ManagerMain","temp","setTemp","dispatch","ismanagerLogin","state","reducerMenu","accessToken","test","res","get","headers","authorization","accept","then","data","isHeManager","email","type","ajaxForJsonWebToken","console","log","catch","e","post","token","payload","ajaxForIsAuthorization","error","Authorization","withCredentials"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ManagerMain() {\n    // 리덕스로 로그인되면 다른 컴포넌트로 렌더링하자\n\n    const [temp, setTemp] = useState(false);\n\n    const dispatch = useDispatch();\n    const ismanagerLogin = useSelector((state) => {\n        return state.reducerMenu.ismanagerLogin;\n    });\n    const accessToken = useSelector((state)=>{\n        return state.reducerMenu.accessToken;\n    })\n    useEffect(async ()=>{\n        // 새로고침해도 그때마다 ajax요청해서 만약 req.header 즉 브라우저의 캐시, 쿠키, 헤더에 토큰이 있다면\n        // 관리자페이지를 Authorizaion할 수 있도록 하는 코드\n        // await axios.post('')\n\n    }, [])\n\n    async function test(res) {\n        await axios.get('https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + res.accessToken, {\n            headers: {\n                authorization: `token ${res.accessToken}`,\n                accept: 'application/json'\n            }\n        })\n            .then(data => {\n                const isHeManager = data.data.email === \"bejejupark@gmail.com\";\n                if (isHeManager) {\n                    dispatch({\n                        type: 'LOGIN_MANAGER'\n                    });\n                    ajaxForJsonWebToken(res.accessToken);\n                } else {\n                    console.log('실패함')\n                }\n            }).catch(e => console.log('oAuth token expired'));\n    }\n    async function ajaxForJsonWebToken(temp){\n        // nodejs로 만든 서버에서 google로 로그인이 됐을시, jsonwebtoken을 발급해줄 수 있도록 함\n        // 그래서 새로고침해도 브라우저 쿠키에 토큰 표딱지가 있으면 관리자 페이지가 안꺼질 수 있도록\n        await axios.post('http://localhost:3001/login', {\n            token: temp\n        })\n        .then((data)=>{\n            console.log('data : ', data);\n            console.log('data.data.accessToken : ', data.data.accessToken);\n            setTemp(data.data.accessToken);\n            dispatch({\n                type: 'ACCESS_TOKEN',\n                payload: {\n                    accessToken: data.data.accessToken\n                }\n            })\n            ajaxForIsAuthorization();\n        })\n        .catch((error)=>{\n            console.log('error : ', error);\n        })\n    }\n    async function ajaxForIsAuthorization(){\n        await axios.get('http://localhost:3001/isAuthorization', {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n              \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n          })\n        .then((data)=>{\n            console.log('data : ', data);\n            console.log('{ message: This is Authorization OK }');\n        })\n        .catch((error) =>{\n            console.log('ajaxForIsAuthorization error : ', error);\n        })\n    }\n\n    return (\n        <div>\n            {ismanagerLogin ? <>로그인됌</>: <>\n                <GoogleLogin\n                clientId={'780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com'}\n                buttonText=\"Google로 로그인\"\n                onSuccess={test}\n                onFailure={test} />\n            </>}\n        </div>\n    )\n}\n\nexport default ManagerMain\n"]},"metadata":{},"sourceType":"module"}