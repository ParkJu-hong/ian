{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/MakePictures.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AWS = require('aws-sdk');\n\nAWS.config.region = 'ap-northeast-2'; // const formidable = require('formidable');\n// s3에 이미지파일, 텍스트(문자열)올리고 볼 수 있는 Create, Read 까지 구현해보자.\n\n/*\n    npm install aws-sdk --save\n\n    그 후에 notion에 정리한 대로 개발환경을 구축했다.\n\n    npm install formidable@latest --save\n*/\n\nfunction MakePictures() {\n  _s();\n\n  const [s3, setS3] = useState(null); // const [clickOrNot, setClickOrNot] = useState(false);\n\n  const [forCleanUp, setForCleanUp] = useState(true);\n  useEffect(() => {\n    if (forCleanUp) {\n      setS3(new AWS.S3());\n    }\n\n    return () => {\n      setForCleanUp(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => {\n        console.log('s3: ', s3);\n        const params = {\n          Bucket: 'ianenvironment',\n          Key: 'ThisIsTest',\n          ACL: 'public-read',\n          Body: 'test.jpeg'\n        };\n        s3.upload(params, function (err, data) {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log(data);\n          }\n        });\n      },\n      children: \"Click Me !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MakePictures, \"60ow001Y+ctfXURWYngxQF+jSI0=\");\n\n_c = MakePictures;\nexport default MakePictures;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakePictures\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/MakePictures.jsx"],"names":["React","useState","useEffect","AWS","require","config","region","MakePictures","s3","setS3","forCleanUp","setForCleanUp","S3","console","log","params","Bucket","Key","ACL","Body","upload","err","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACAD,GAAG,CAACE,MAAJ,CAAWC,MAAX,GAAoB,gBAApB,C,CACA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcR,QAAQ,CAAC,IAAD,CAA5B,CAFoB,CAGpB;;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,UAAJ,EAAgB;AACZD,MAAAA,KAAK,CAAC,IAAIN,GAAG,CAACS,EAAR,EAAD,CAAL;AACH;;AACD,WAAO,MAAM;AACTD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,2BAcI;AAAI,MAAA,OAAO,EAAE,MAAM;AACfE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,EAApB;AACA,cAAMO,MAAM,GAAG;AACXC,UAAAA,MAAM,EAAE,gBADG;AAEXC,UAAAA,GAAG,EAAE,YAFM;AAGXC,UAAAA,GAAG,EAAE,aAHM;AAIXC,UAAAA,IAAI,EAAE;AAJK,SAAf;AAMAX,QAAAA,EAAE,CAACY,MAAH,CAAUL,MAAV,EAAkB,UAAUM,GAAV,EAAeC,IAAf,EAAqB;AACnC,cAAGD,GAAH,EAAO;AACHR,YAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,WAFD,MAEK;AACDR,YAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACH;AACJ,SAND;AAOH,OAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAhDQf,Y;;KAAAA,Y;AAkDT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nconst AWS = require('aws-sdk');\nAWS.config.region = 'ap-northeast-2';\n// const formidable = require('formidable');\n\n\n// s3에 이미지파일, 텍스트(문자열)올리고 볼 수 있는 Create, Read 까지 구현해보자.\n/*\n    npm install aws-sdk --save\n\n    그 후에 notion에 정리한 대로 개발환경을 구축했다.\n\n    npm install formidable@latest --save\n*/\n\nfunction MakePictures() {\n\n    const [s3, setS3] = useState(null);\n    // const [clickOrNot, setClickOrNot] = useState(false);\n    const [forCleanUp, setForCleanUp] = useState(true);\n\n    useEffect(() => {\n        if (forCleanUp) {\n            setS3(new AWS.S3());\n        }\n        return () => {\n            setForCleanUp(false);\n        }\n    }, [])\n\n    return (\n        <div>\n            {/* <form enctype=\"multipart/form-data\" method=\"post\">\n                <input type=\"file\" name=\"userfile\"></input>\n                <input type=\"submit\"></input>\n            </form> */}\n            {/* <form enctype=\"multipart/form-data\" method=\"post\" name=\"fileinfo\">\n                <label>Your email address:</label>\n                <input type=\"email\" autocomplete=\"on\" autofocus name=\"userid\" placeholder=\"email\" required size=\"32\" maxlength=\"64\" /><br />\n                <label>Custom file label:</label>\n                <input type=\"text\" name=\"filelabel\" size=\"12\" maxlength=\"32\" /><br />\n                <label>File to stash:</label>\n                <input type=\"file\" name=\"file\" required />\n                <input type=\"submit\" value=\"Stash the file!\" />\n            </form> */}\n            <h1 onClick={() => {\n                console.log('s3: ', s3);\n                const params = {\n                    Bucket: 'ianenvironment',\n                    Key: 'ThisIsTest',\n                    ACL: 'public-read',\n                    Body: 'test.jpeg'\n                }\n                s3.upload(params, function (err, data) {\n                    if(err){\n                        console.log(err);\n                    }else{\n                        console.log(data);\n                    }\n                });\n            }}>Click Me !</h1>\n        </div>\n    )\n}\n\nexport default MakePictures\n"]},"metadata":{},"sourceType":"module"}