{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/MakePictures.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst AWS = require('aws-sdk'); // AWS.config.region = 'ap-northeast-2';\n\n\nconst SESConfig = {\n  apiVersion: \"2015-03-31\",\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n  accessSecretKey: process.env.AWS_SECRET_KEY,\n  region: \"ap-northeast-2\"\n};\nAWS.config.update(SESConfig); // const formidable = require('formidable');\n// s3에 이미지파일, 텍스트(문자열)올리고 볼 수 있는 Create, Read 까지 구현해보자.\n\n/*\n    npm install aws-sdk --save\n\n    그 후에 notion에 정리한 대로 개발환경을 구축했다.\n\n    npm install formidable@latest --save\n*/\n\nfunction MakePictures() {\n  _s();\n\n  const [s3, setS3] = useState(null);\n  const [ec2, setEc2] = useState(null); // const [clickOrNot, setClickOrNot] = useState(false);\n\n  const [forCleanUp, setForCleanUp] = useState(true);\n  useEffect(() => {\n    console.log('process.env.AWS_SECRET_KEY : ', process.env.AWS_SECRET_KEY);\n\n    if (forCleanUp) {\n      setS3(new AWS.S3());\n      setEc2(new AWS.EC2());\n    }\n\n    return () => {\n      setForCleanUp(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => {\n        console.log('s3 : ', s3);\n        ec2.describeInstances({}, function (err, data) {\n          console.log('ec2.describeInstances : ', data);\n          return;\n        });\n        const params = {\n          Bucket: 'ianenvironment',\n          Key: 'ThisIsTest',\n          ACL: 'public-read',\n          Body: '/image/logo.jpeg'\n        };\n        s3.upload(params, function (err, data) {\n          if (err) {\n            console.log('err : ', err);\n          } else {\n            console.log('data : ', data);\n          }\n        });\n        s3.listBuckets(function (err, data) {\n          if (err) {\n            console.log(\"listBuckets Error\", err);\n          } else {\n            console.log(\"listBuckets Success\", data.Buckets);\n          }\n        });\n      },\n      children: \"Click Me !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MakePictures, \"tYoe79Dzj87ffEgGkvW9ox5VvTI=\");\n\n_c = MakePictures;\nexport default MakePictures;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakePictures\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/MakePictures.jsx"],"names":["React","useState","useEffect","require","config","AWS","SESConfig","apiVersion","accessKeyId","process","env","AWS_ACCESS_KEY_ID","accessSecretKey","AWS_SECRET_KEY","region","update","MakePictures","s3","setS3","ec2","setEc2","forCleanUp","setForCleanUp","console","log","S3","EC2","describeInstances","err","data","params","Bucket","Key","ACL","Body","upload","listBuckets","Buckets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,GAAG,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CACA;;;AACA,MAAMG,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,YADE;AAEdC,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBAFX;AAGdC,EAAAA,eAAe,EAAEH,OAAO,CAACC,GAAR,CAAYG,cAHf;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAlB;AAMAT,GAAG,CAACD,MAAJ,CAAWW,MAAX,CAAkBT,SAAlB,E,CACA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASU,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcjB,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAAC,IAAD,CAA9B,CAHoB,CAIpB;;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6Cf,OAAO,CAACC,GAAR,CAAYG,cAAzD;;AACA,QAAIQ,UAAJ,EAAgB;AACZH,MAAAA,KAAK,CAAC,IAAIb,GAAG,CAACoB,EAAR,EAAD,CAAL;AACAL,MAAAA,MAAM,CAAC,IAAIf,GAAG,CAACqB,GAAR,EAAD,CAAN;AACH;;AACD,WAAO,MAAM;AACTJ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD;AAGH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAA,2BAcI;AAAI,MAAA,OAAO,EAAE,MAAM;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,EAArB;AACDE,QAAAA,GAAG,CAACQ,iBAAJ,CAAsB,EAAtB,EAA0B,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAEzCN,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCK,IAAxC;AACA;AACP,SAJE;AAKC,cAAMC,MAAM,GAAG;AACXC,UAAAA,MAAM,EAAE,gBADG;AAEXC,UAAAA,GAAG,EAAE,YAFM;AAGXC,UAAAA,GAAG,EAAE,aAHM;AAIXC,UAAAA,IAAI,EAAE;AAJK,SAAf;AAMAjB,QAAAA,EAAE,CAACkB,MAAH,CAAUL,MAAV,EAAkB,UAAUF,GAAV,EAAeC,IAAf,EAAqB;AACnC,cAAGD,GAAH,EAAO;AACHL,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,GAAtB;AACH,WAFD,MAEK;AACDL,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,IAAvB;AACH;AACJ,SAND;AAOAZ,QAAAA,EAAE,CAACmB,WAAH,CAAe,UAASR,GAAT,EAAcC,IAAd,EAAoB;AAC/B,cAAID,GAAJ,EAAS;AACPL,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCI,GAAjC;AACD,WAFD,MAEO;AACLL,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,IAAI,CAACQ,OAAxC;AACD;AACF,SANH;AAOH,OA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;GA/DQrB,Y;;KAAAA,Y;AAiET,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nrequire(\"dotenv\").config();\nconst AWS = require('aws-sdk');\n// AWS.config.region = 'ap-northeast-2';\nconst SESConfig = {\n    apiVersion: \"2015-03-31\",\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    accessSecretKey: process.env.AWS_SECRET_KEY,\n    region: \"ap-northeast-2\"\n}\nAWS.config.update(SESConfig);\n// const formidable = require('formidable');\n\n\n// s3에 이미지파일, 텍스트(문자열)올리고 볼 수 있는 Create, Read 까지 구현해보자.\n/*\n    npm install aws-sdk --save\n\n    그 후에 notion에 정리한 대로 개발환경을 구축했다.\n\n    npm install formidable@latest --save\n*/\n\nfunction MakePictures() {\n\n    const [s3, setS3] = useState(null);\n    const [ec2, setEc2] = useState(null);\n    // const [clickOrNot, setClickOrNot] = useState(false);\n    const [forCleanUp, setForCleanUp] = useState(true);\n\n    useEffect(() => {\n        console.log('process.env.AWS_SECRET_KEY : ', process.env.AWS_SECRET_KEY);\n        if (forCleanUp) {\n            setS3(new AWS.S3());\n            setEc2(new AWS.EC2());\n        }\n        return () => {\n            setForCleanUp(false);\n        }\n    }, [])\n\n    return (\n        <div>\n            {/* <form enctype=\"multipart/form-data\" method=\"post\">\n                <input type=\"file\" name=\"userfile\"></input>\n                <input type=\"submit\"></input>\n            </form> */}\n            {/* <form enctype=\"multipart/form-data\" method=\"post\" name=\"fileinfo\">\n                <label>Your email address:</label>\n                <input type=\"email\" autocomplete=\"on\" autofocus name=\"userid\" placeholder=\"email\" required size=\"32\" maxlength=\"64\" /><br />\n                <label>Custom file label:</label>\n                <input type=\"text\" name=\"filelabel\" size=\"12\" maxlength=\"32\" /><br />\n                <label>File to stash:</label>\n                <input type=\"file\" name=\"file\" required />\n                <input type=\"submit\" value=\"Stash the file!\" />\n            </form> */}\n            <h1 onClick={() => {\n                console.log('s3 : ', s3);\n               ec2.describeInstances({}, function(err, data) {\n\n                    console.log('ec2.describeInstances : ', data);\n                    return ;\n            })\n                const params = {\n                    Bucket: 'ianenvironment',\n                    Key: 'ThisIsTest',\n                    ACL: 'public-read',\n                    Body: '/image/logo.jpeg'\n                }\n                s3.upload(params, function (err, data) {\n                    if(err){\n                        console.log('err : ', err);\n                    }else{\n                        console.log('data : ', data);\n                    }\n                });\n                s3.listBuckets(function(err, data) {\n                    if (err) {\n                      console.log(\"listBuckets Error\", err);\n                    } else {\n                      console.log(\"listBuckets Success\", data.Buckets);\n                    }\n                  });\n            }}>Click Me !</h1>\n        </div>\n    )\n}\n\nexport default MakePictures\n"]},"metadata":{},"sourceType":"module"}