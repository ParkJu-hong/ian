{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/Gallery.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport dummyPictures from '../../../dummyDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gallery() {\n  _s();\n\n  const [forRenderingOne, setForRenderingOne] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 60\n  }, this));\n  const [forRenderingTwo, setForRenderingTwo] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 60\n  }, this));\n  const [forRenderingThree, setForRenderingThree] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 64\n  }, this));\n  const [forRenderingFour, setForRenderingFour] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 62\n  }, this));\n  const [pageCount, setPageCount] = useState( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 48\n  }, this));\n  const [_temp, set_Temp] = useState(['안녕하세요', '안녕하세요', '안녕하세요', '안녕하세요']); // 애초에 4개씩 받아서 뿌릴 것\n\n  function forFourMultiplyFour(_pictures) {\n    if (_pictures.length === 0) {\n      return '';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: _pictures.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Img, {\n            src: el.src,\n            alt: \"picture\"\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: el.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uC0DD\\uC131\\uC77C\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  function makeHowManyPage(count) {\n    // 태그안에 함수로 또 다른 태그를 감싼다음에 forFourMultiplyFour로 한 것처럼 렌더링할 것을 return 했는데\n    // 안되서 state을 배열로 만들어서\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"makeHowManyPage\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: () => {\n        for (let i = 1; i <= count; i++) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 28\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  useEffect(() => {\n    // 서버에서 줄때 무조건 객체 16개가 든 배열이 응답해와야 정상작동되는 코드다..\n    setPageCount(makeHowManyPage(5));\n    setForRenderingOne(forFourMultiplyFour(dummyPictures.pictures.slice(0, 4)));\n    setForRenderingTwo(forFourMultiplyFour(dummyPictures.pictures.slice(4, 8)));\n    setForRenderingThree(forFourMultiplyFour(dummyPictures.pictures.slice(8, 12)));\n    setForRenderingFour(forFourMultiplyFour(dummyPictures.pictures.slice(12)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [안녕하세요, \"'Hello world'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gallery, \"LMnOl8D8K2PF28Naoxy2ZENgo40=\");\n\n_c = Gallery;\nexport default Gallery;\nconst Img = styled.img`\n    width: 15vw;\n    height: 20vh;\n`;\n_c2 = Img;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Gallery\");\n$RefreshReg$(_c2, \"Img\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/Gallery.jsx"],"names":["React","useState","useEffect","styled","dummyPictures","Gallery","forRenderingOne","setForRenderingOne","forRenderingTwo","setForRenderingTwo","forRenderingThree","setForRenderingThree","forRenderingFour","setForRenderingFour","pageCount","setPageCount","_temp","set_Temp","forFourMultiplyFour","_pictures","length","display","justifyContent","map","el","margin","src","id","title","makeHowManyPage","count","i","pictures","slice","안녕하세요","Img","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA,UAAD,CAAtD;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA,UAAD,CAAtD;AACA,QAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA,UAAD,CAA1D;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA,UAAD,CAAxD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAA1C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAAD,CAAlC,CAPe,CASf;;AAEA,WAASiB,mBAAT,CAA6BC,SAA7B,EAAwC;AAEpC,QAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxB,aAAO,EAAP;AACH;;AAED,wBAAO;AACH,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OADJ;AAAA,gBACoDH,SAAS,CAACI,GAAV,CAAeC,EAAD,IAAQ;AACzE,4BAAO;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAZ;AAAA,kCACH,QAAC,GAAD;AAAiB,YAAA,GAAG,EAAED,EAAE,CAACE,GAAzB;AAA8B,YAAA,GAAG,EAAC;AAAlC,aAAUF,EAAE,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAK,YAAA,KAAK,EAAE;AAAEN,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACI;AAAA,wBAAME,EAAE,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAOH,OARsD;AADpD;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH;;AAED,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B;AACA;AAGA,wBAAO;AACH,MAAA,SAAS,EAAC,iBADP;AAEH,MAAA,KAAK,EAAE;AAAET,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAFJ;AAAA,gBAGF,MAAM;AACH,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,KAArB,EAA4BC,CAAC,EAA7B,EAAiC;AAC7B,8BAAO;AAAA,sBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;AACJ;AAPE;AAAA;AAAA;AAAA;AAAA,YAAP;AASH;;AAED7B,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAa,IAAAA,YAAY,CAACc,eAAe,CAAC,CAAD,CAAhB,CAAZ;AAEAtB,IAAAA,kBAAkB,CAACW,mBAAmB,CAACd,aAAa,CAAC4B,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAApB,CAAlB;AACAxB,IAAAA,kBAAkB,CAACS,mBAAmB,CAACd,aAAa,CAAC4B,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAApB,CAAlB;AACAtB,IAAAA,oBAAoB,CAACO,mBAAmB,CAACd,aAAa,CAAC4B,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,CAAD,CAApB,CAApB;AACApB,IAAAA,mBAAmB,CAACK,mBAAmB,CAACd,aAAa,CAAC4B,QAAd,CAAuBC,KAAvB,CAA6B,EAA7B,CAAD,CAApB,CAAnB;AAEH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAA,2BAMI;AAAA,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlEQ7B,O;;KAAAA,O;AAoET,eAAeA,OAAf;AAEA,MAAM8B,GAAG,GAAGhC,MAAM,CAACiC,GAAI;AACvB;AACA;AACA,CAHA;MAAMD,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport dummyPictures from '../../../dummyDate';\n\nfunction Gallery() {\n\n    const [forRenderingOne, setForRenderingOne] = useState(<div></div>);\n    const [forRenderingTwo, setForRenderingTwo] = useState(<div></div>);\n    const [forRenderingThree, setForRenderingThree] = useState(<div></div>);\n    const [forRenderingFour, setForRenderingFour] = useState(<div></div>);\n    const [pageCount, setPageCount] = useState(<div>1</div>);\n    const [_temp, set_Temp] = useState(['안녕하세요', '안녕하세요', '안녕하세요', '안녕하세요'])\n\n    // 애초에 4개씩 받아서 뿌릴 것\n\n    function forFourMultiplyFour(_pictures) {\n\n        if (_pictures.length === 0) {\n            return '';\n        }\n\n        return <div\n            style={{ display: 'flex', justifyContent: 'center' }}>{_pictures.map((el) => {\n                return <div style={{ margin: '5px' }}>\n                    <Img key={el.id} src={el.src} alt=\"picture\"></Img>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div>{el.title}</div>\n                        <div>생성일자</div>\n                    </div>\n                </div>;\n            })}</div>;\n    }\n\n    function makeHowManyPage(count) {\n        // 태그안에 함수로 또 다른 태그를 감싼다음에 forFourMultiplyFour로 한 것처럼 렌더링할 것을 return 했는데\n        // 안되서 state을 배열로 만들어서\n\n\n        return <div\n            className=\"makeHowManyPage\"\n            style={{ display: 'flex', justifyContent: 'center' }}>\n            {() => {\n                for (let i = 1; i <= count; i++) {\n                    return <div>{i}</div>\n                }\n            }}\n        </div>\n    }\n\n    useEffect(() => {\n        // 서버에서 줄때 무조건 객체 16개가 든 배열이 응답해와야 정상작동되는 코드다..\n        setPageCount(makeHowManyPage(5))\n\n        setForRenderingOne(forFourMultiplyFour(dummyPictures.pictures.slice(0, 4)));\n        setForRenderingTwo(forFourMultiplyFour(dummyPictures.pictures.slice(4, 8)));\n        setForRenderingThree(forFourMultiplyFour(dummyPictures.pictures.slice(8, 12)));\n        setForRenderingFour(forFourMultiplyFour(dummyPictures.pictures.slice(12)));\n\n    }, []);\n\n    return (\n        <div>\n            {/* {forRenderingOne}\n            {forRenderingTwo}\n            {forRenderingThree}\n            {forRenderingFour} */}\n            \n            <div>{안녕하세요}'Hello world'</div>\n        </div>\n    )\n}\n\nexport default Gallery\n\nconst Img = styled.img`\n    width: 15vw;\n    height: 20vh;\n`\n"]},"metadata":{},"sourceType":"module"}