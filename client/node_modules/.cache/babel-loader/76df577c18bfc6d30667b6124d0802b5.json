{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bagjuhong/Desktop/ian/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState,useEffect}from'react';import styled from'styled-components';import dummyPictures from'../../../dummyDate';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Gallery(){var _useState=useState(/*#__PURE__*/_jsx(\"div\",{})),_useState2=_slicedToArray(_useState,2),forRenderingOne=_useState2[0],setForRenderingOne=_useState2[1];var _useState3=useState(/*#__PURE__*/_jsx(\"div\",{})),_useState4=_slicedToArray(_useState3,2),forRenderingTwo=_useState4[0],setForRenderingTwo=_useState4[1];var _useState5=useState(/*#__PURE__*/_jsx(\"div\",{})),_useState6=_slicedToArray(_useState5,2),forRenderingThree=_useState6[0],setForRenderingThree=_useState6[1];var _useState7=useState(/*#__PURE__*/_jsx(\"div\",{})),_useState8=_slicedToArray(_useState7,2),forRenderingFour=_useState8[0],setForRenderingFour=_useState8[1];var _useState9=useState(/*#__PURE__*/_jsx(\"div\",{children:\"1\"})),_useState10=_slicedToArray(_useState9,2),pageCount=_useState10[0],setPageCount=_useState10[1];// 애초에 4개씩 받아서 뿌릴 것\nfunction forFourMultiplyFour(_pictures){if(_pictures.length===0){return'';}return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:_pictures.map(function(el){return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'5px'},children:[/*#__PURE__*/_jsx(Img,{src:el.src,alt:\"picture\"},el.id),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"div\",{children:el.title}),/*#__PURE__*/_jsx(\"div\",{children:\"\\uC0DD\\uC131\\uC77C\\uC790\"})]})]});})});}function makeHowManyPage(count){// 태그안에 함수로 또 다른 태그를 감싼다음에 forFourMultiplyFour로 한 것처럼 렌더링할 것을 return 했는데\n// 안되서 state을 배열로 만들어서\nvar arr=[];for(var i=1;i<=count;i++){arr.push(/*#__PURE__*/_jsx(\"div\",{style:{margin:'10px'},children:i}));}return/*#__PURE__*/_jsx(\"div\",{className:\"makeHowManyPage\",style:{display:'flex',justifyContent:'center'},children:arr});}useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// 서버에서 줄때 무조건 객체 16개가 든 배열이 응답해와야 정상작동되는 코드다..\nsetPageCount(makeHowManyPage(5));_context.next=3;return axios({method:'get',url:'http://localhost:3001/gallery/read',params:{id:123}}).then(function(result){console.log(result.data);return;});case 3:// 이미지 뿌릴려면 AWS S3을 써야할 것 같다. 생활코딩에서 강의 듣고 공부를 해야할 듯하다.\nsetForRenderingOne(forFourMultiplyFour(dummyPictures.pictures.slice(0,4)));setForRenderingTwo(forFourMultiplyFour(dummyPictures.pictures.slice(4,8)));setForRenderingThree(forFourMultiplyFour(dummyPictures.pictures.slice(8,12)));setForRenderingFour(forFourMultiplyFour(dummyPictures.pictures.slice(12)));case 7:case\"end\":return _context.stop();}}},_callee);})),[]);return/*#__PURE__*/_jsxs(\"div\",{children:[forRenderingOne,forRenderingTwo,forRenderingThree,forRenderingFour,pageCount]});}export default Gallery;var Img=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    width: 15vw;\\n    height: 20vh;\\n\"])));","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/contentsComponents/Gallery.jsx"],"names":["React","useState","useEffect","styled","dummyPictures","axios","Gallery","forRenderingOne","setForRenderingOne","forRenderingTwo","setForRenderingTwo","forRenderingThree","setForRenderingThree","forRenderingFour","setForRenderingFour","pageCount","setPageCount","forFourMultiplyFour","_pictures","length","display","justifyContent","map","el","margin","src","id","title","makeHowManyPage","count","arr","i","push","method","url","params","then","result","console","log","data","pictures","slice","Img","img"],"mappings":"yoBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CAEf,cAA8CL,QAAQ,cAAC,cAAD,CAAtD,wCAAOM,eAAP,eAAwBC,kBAAxB,eACA,eAA8CP,QAAQ,cAAC,cAAD,CAAtD,yCAAOQ,eAAP,eAAwBC,kBAAxB,eACA,eAAkDT,QAAQ,cAAC,cAAD,CAA1D,yCAAOU,iBAAP,eAA0BC,oBAA1B,eACA,eAAgDX,QAAQ,cAAC,cAAD,CAAxD,yCAAOY,gBAAP,eAAyBC,mBAAzB,eACA,eAAkCb,QAAQ,cAAC,0BAAD,CAA1C,0CAAOc,SAAP,gBAAkBC,YAAlB,gBAEA;AAEA,QAASC,CAAAA,mBAAT,CAA6BC,SAA7B,CAAwC,CAEpC,GAAIA,SAAS,CAACC,MAAV,GAAqB,CAAzB,CAA4B,CACxB,MAAO,EAAP,CACH,CAED,mBAAO,YACH,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CADJ,UACoDH,SAAS,CAACI,GAAV,CAAc,SAACC,EAAD,CAAQ,CACzE,mBAAO,aAAK,KAAK,CAAE,CAAEC,MAAM,CAAE,KAAV,CAAZ,wBACH,KAAC,GAAD,EAAiB,GAAG,CAAED,EAAE,CAACE,GAAzB,CAA8B,GAAG,CAAC,SAAlC,EAAUF,EAAE,CAACG,EAAb,CADG,cAEH,aAAK,KAAK,CAAE,CAAEN,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,eAAnC,CAAZ,wBACI,qBAAME,EAAE,CAACI,KAAT,EADJ,cAEI,iDAFJ,GAFG,GAAP,CAOH,CARsD,CADpD,EAAP,CAUH,CAED,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B;AACA;AAEA,GAAIC,CAAAA,GAAG,CAAG,EAAV,CAEA,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAIF,KAApB,CAA2BE,CAAC,EAA5B,CAA+B,CAC3BD,GAAG,CAACE,IAAJ,cAAS,YAAK,KAAK,CAAE,CAAER,MAAM,CAAE,MAAV,CAAZ,UAAgCO,CAAhC,EAAT,EACH,CAED,mBAAO,YACH,SAAS,CAAC,iBADP,CAEH,KAAK,CAAE,CAAEX,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAFJ,UAGES,GAHF,EAAP,CAKH,CAED5B,SAAS,sEAAC,mIACN;AACAc,YAAY,CAACY,eAAe,CAAC,CAAD,CAAhB,CAAZ,CAFM,sBAIAvB,CAAAA,KAAK,CAAC,CACR4B,MAAM,CAAE,KADA,CAERC,GAAG,CAAE,oCAFG,CAGRC,MAAM,CAAG,CACLT,EAAE,CAAE,GADC,CAHD,CAAD,CAAL,CAMHU,IANG,CAME,SAACC,MAAD,CAAY,CAChBC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EACA,OACH,CATK,CAJA,QAeN;AAGAhC,kBAAkB,CAACS,mBAAmB,CAACb,aAAa,CAACqC,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,CAAgC,CAAhC,CAAD,CAApB,CAAlB,CACAhC,kBAAkB,CAACO,mBAAmB,CAACb,aAAa,CAACqC,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,CAAgC,CAAhC,CAAD,CAApB,CAAlB,CACA9B,oBAAoB,CAACK,mBAAmB,CAACb,aAAa,CAACqC,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,CAAgC,EAAhC,CAAD,CAApB,CAApB,CACA5B,mBAAmB,CAACG,mBAAmB,CAACb,aAAa,CAACqC,QAAd,CAAuBC,KAAvB,CAA6B,EAA7B,CAAD,CAApB,CAAnB,CArBM,sDAAD,GAuBN,EAvBM,CAAT,CAyBA,mBACI,uBACKnC,eADL,CAEKE,eAFL,CAGKE,iBAHL,CAIKE,gBAJL,CAKKE,SALL,GADJ,CAcH,CAED,cAAeT,CAAAA,OAAf,CAEA,GAAMqC,CAAAA,GAAG,CAAGxC,MAAM,CAACyC,GAAV,wGAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport dummyPictures from '../../../dummyDate';\nimport axios from 'axios';\n\nfunction Gallery() {\n\n    const [forRenderingOne, setForRenderingOne] = useState(<div></div>);\n    const [forRenderingTwo, setForRenderingTwo] = useState(<div></div>);\n    const [forRenderingThree, setForRenderingThree] = useState(<div></div>);\n    const [forRenderingFour, setForRenderingFour] = useState(<div></div>);\n    const [pageCount, setPageCount] = useState(<div>1</div>);\n\n    // 애초에 4개씩 받아서 뿌릴 것\n\n    function forFourMultiplyFour(_pictures) {\n\n        if (_pictures.length === 0) {\n            return '';\n        }\n\n        return <div\n            style={{ display: 'flex', justifyContent: 'center' }}>{_pictures.map((el) => {\n                return <div style={{ margin: '5px' }}>\n                    <Img key={el.id} src={el.src} alt=\"picture\"></Img>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div>{el.title}</div>\n                        <div>생성일자</div>\n                    </div>\n                </div>;\n            })}</div>;\n    }\n\n    function makeHowManyPage(count) {\n        // 태그안에 함수로 또 다른 태그를 감싼다음에 forFourMultiplyFour로 한 것처럼 렌더링할 것을 return 했는데\n        // 안되서 state을 배열로 만들어서\n\n        let arr = [];\n\n        for(let i = 1; i <= count; i++){\n            arr.push(<div style={{ margin: '10px'}}>{i}</div>)\n        }\n\n        return <div\n            className=\"makeHowManyPage\"\n            style={{ display: 'flex', justifyContent: 'center' }}>\n                {arr}\n        </div>\n    }\n\n    useEffect(async () => {\n        // 서버에서 줄때 무조건 객체 16개가 든 배열이 응답해와야 정상작동되는 코드다..\n        setPageCount(makeHowManyPage(5))\n\n        await axios({\n            method: 'get',\n            url: 'http://localhost:3001/gallery/read',\n            params : {\n                id: 123\n            }\n        }).then((result) => {\n            console.log(result.data);\n            return;\n        })\n\n        // 이미지 뿌릴려면 AWS S3을 써야할 것 같다. 생활코딩에서 강의 듣고 공부를 해야할 듯하다.\n\n\n        setForRenderingOne(forFourMultiplyFour(dummyPictures.pictures.slice(0, 4)));\n        setForRenderingTwo(forFourMultiplyFour(dummyPictures.pictures.slice(4, 8)));\n        setForRenderingThree(forFourMultiplyFour(dummyPictures.pictures.slice(8, 12)));\n        setForRenderingFour(forFourMultiplyFour(dummyPictures.pictures.slice(12)));\n\n    }, []);\n\n    return (\n        <div>\n            {forRenderingOne}\n            {forRenderingTwo}\n            {forRenderingThree}\n            {forRenderingFour}\n            {pageCount}\n            {/* \n                여기에 페이지 수를 이동하는 코드를 pageCount라는 state와 makeHowManyPage 함수로 렌더링 하려했는데\n                이상하게 렌더링이 되지않아 스택오버플로우에 올렸다.\n                https://stackoverflow.com/questions/70330427/why-this-function-doesnt-rendering-in-react\n            */}\n        </div>\n    )\n}\n\nexport default Gallery\n\nconst Img = styled.img`\n    width: 15vw;\n    height: 20vh;\n`\n"]},"metadata":{},"sourceType":"module"}