{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/ian/client/src/web/components/managerComponents/ManagerMain.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ManagerMain() {\n  _s();\n\n  // 리덕스로 로그인되면 다른 컴포넌트로 렌더링하자\n  const dispatch = useDispatch();\n\n  async function test(res) {\n    console.log('res : ', res.accessToken);\n    await axios.get('https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + res.accessToken, {\n      headers: {\n        authorization: `token ${res.accessToken}`,\n        accept: 'application/json'\n      }\n    }).then(data => {\n      console.log(data.email);\n\n      if (data.email === \"bejejupark@gmail.com\") {\n        console.log('성공함');\n        dispatch({\n          type: 'LOGIN_MANAGER'\n        });\n      } else {\n        console.log('실패함');\n      }\n    }).catch(e => console.log('oAuth token expired'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uAD00\\uB9AC\\uC790\\uBA54\\uC778\\uD398\\uC774\\uC9C0 \\uC5EC\\uAE30\\uB2E4\\uAC00 \\uCC98\\uC74C \\uD398\\uC774\\uC9C0\\uB97C Oath \\uB85C\\uADF8\\uC778\\uC744 \\uD558\\uB3C4\\uB85D \\uD558\\uC790. \\uADF8\\uB9AC\\uACE0 \\uD1A0\\uD070\\uC744 \\uC8FC\\uACE0 \\uADF8 \\uD1A0\\uD070\\uC73C\\uB85C \\uAD00\\uB9AC\\uC790 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C Authorization\\uC744 \\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uD558\\uC790.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [\"OAuth 2.0\\uC73C\\uB85C \\uC18C\\uC15C \\uB85C\\uADF8\\uC778\\uC744 \\uAD6C\\uD604\\uD574\\uBCF4\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"logo\",\n        alt: \"logo\",\n        src: \"https://lh3.googleusercontent.com/a/default-user=s96-c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: '780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com',\n        buttonText: \"Google\\uB85C \\uB85C\\uADF8\\uC778\",\n        onSuccess: test,\n        onFailure: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ManagerMain, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ManagerMain;\nexport default ManagerMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerMain\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/ian/client/src/web/components/managerComponents/ManagerMain.jsx"],"names":["React","axios","GoogleLogin","useDispatch","ManagerMain","dispatch","test","res","console","log","accessToken","get","headers","authorization","accept","then","data","email","type","catch","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB;AAEA,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,iBAAeG,IAAf,CAAoBC,GAApB,EAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAG,CAACG,WAA1B;AACA,UAAMT,KAAK,CAACU,GAAN,CAAU,gEAAgEJ,GAAG,CAACG,WAA9E,EAA2F;AAC7FE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQN,GAAG,CAACG,WAAY,EADjC;AAEPI,QAAAA,MAAM,EAAE;AAFD;AADoF,KAA3F,EAKDC,IALC,CAKIC,IAAI,IAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACC,KAAjB;;AACA,UAAGD,IAAI,CAACC,KAAL,KAAe,sBAAlB,EAAyC;AACvCT,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAJ,QAAAA,QAAQ,CAAC;AACLa,UAAAA,IAAI,EAAE;AADD,SAAD,CAAR;AAGD,OALD,MAKK;AACHV,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACJ,KAfG,EAeDU,KAfC,CAeKC,CAAC,IAAIZ,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAfV,CAAN;AAgBH;;AACD,sBACI;AAAA,sZAKI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,mIAEA;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,GAAG,EAAC,MAAnB;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,WAAD;AACI,QAAA,QAAQ,EAAE,0EADd;AAEI,QAAA,UAAU,EAAC,iCAFf;AAGI,QAAA,SAAS,EAAEH,IAHf;AAII,QAAA,SAAS,EAAEA;AAJf;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA1CQF,W;UAGYD,W;;;KAHZC,W;AA4CT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\nimport { useDispatch } from 'react-redux';\n\nfunction ManagerMain() {\n    // 리덕스로 로그인되면 다른 컴포넌트로 렌더링하자\n\n    const dispatch = useDispatch();\n\n    async function test(res){\n        console.log('res : ', res.accessToken);\n        await axios.get('https://www.googleapis.com/oauth2/v2/userinfo?access_token=' + res.accessToken, { \n            headers: { \n              authorization: `token ${res.accessToken}`, \n              accept: 'application/json' \n            }})\n            .then(data => {\n              console.log(data.email);\n              if(data.email === \"bejejupark@gmail.com\"){\n                console.log('성공함')\n                dispatch({\n                    type: 'LOGIN_MANAGER'\n                });\n              }else{\n                console.log('실패함')\n              }\n          }).catch(e => console.log('oAuth token expired'));\n    }\n    return (\n        <div>\n            관리자메인페이지\n            여기다가 처음 페이지를 Oath 로그인을 하도록 하자. 그리고 토큰을 주고 그 토큰으로\n            관리자 페이지에서 Authorization을 할 수 있도록 하자.\n\n            <div className='loginContainer'>\n                OAuth 2.0으로 소셜 로그인을 구현해보세요.\n            <img id=\"logo\" alt=\"logo\" src=\"https://lh3.googleusercontent.com/a/default-user=s96-c\" />\n            <GoogleLogin\n                clientId={'780867118511-7phr24j325eauivpisavdb062rmi68er.apps.googleusercontent.com'}\n                buttonText=\"Google로 로그인\"\n                onSuccess={test}\n                onFailure={test}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ManagerMain\n"]},"metadata":{},"sourceType":"module"}